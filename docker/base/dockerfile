FROM nvidia/cuda:12.4.1-cudnn-runtime-ubuntu22.04

ENV CARGO_HOME="/opt/cargo" \
    UV_NO_CACHE=1 \
    UV_COMPILE_BYTECODE=1 \
    VIRTUAL_ENV="/home/haydn/venv" \
    UV_PROJECT_ENVIRONMENT="/home/haydnj/venv" \
    ZDOTDIR="/etc/zsh" \
    HF_HOME="/huggingface"

ENV PATH="${VIRTUAL_ENV}/bin:${CARGO_HOME}/bin:${PATH}"

# Create user / group haydnj with UID/GID 67761
RUN groupadd -g 67761 haydnj \
    && useradd -m -u 67761 -g 67761 haydnj

# Install dependencies and set up the environment
RUN apt update && apt install -y --no-install-recommends \
    curl wget htop tmux acl \
    ca-certificates git git-core gnupg zsh  \
    vim sudo build-essential gcc g++ clang ninja-build \
    && apt clean \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

ADD https://astral.sh/uv/install.sh /uv-installer.sh
RUN sh /uv-installer.sh && rm /uv-installer.sh

RUN mkdir -p /workspace /huggingface \
    && git config --global --add safe.directory /workspace

RUN chown -R haydnj:haydnj /workspace

# Set up ZSH
RUN chsh -s /bin/zsh \
    && wget -O /etc/zsh/.zshrc https://git.grml.org/f/grml-etc-core/etc/zsh/zshrc

RUN setfacl -d -R -m u::rwX,g::rwX,o::rwX /etc/zsh /workspace ${VIRTUAL_ENV} ${CARGO_HOME}
RUN chmod -R ugo=rwX /etc/zsh /workspace ${VIRTUAL_ENV} ${CARGO_HOME}

USER haydnj
ENV USER=haydn

RUN uv python install 3.12 3.11 3.10 3.9 3.8
RUN uv venv --python 3.12 $VIRTUAL_ENV

WORKDIR /workspace
RUN rm -rf /workspace/*

CMD ["/bin/zsh"]